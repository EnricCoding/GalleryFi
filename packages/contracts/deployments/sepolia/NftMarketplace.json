{
  "address": "0x5e3ef51F0a662dF65dea3e115C689E0cDE2A0F37",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        },
        {
          "internalType": "uint96",
          "name": "_feeBps",
          "type": "uint96"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "EnforcedPause",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ExpectedPause",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ReentrancyGuardReentrantCall",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "nft",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "end",
          "type": "uint256"
        }
      ],
      "name": "AuctionCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "nft",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "winner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "AuctionEnded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "nft",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "bidder",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "BidPlaced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "nft",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "ItemDelisted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "nft",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "ItemListed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "nft",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newPrice",
          "type": "uint256"
        }
      ],
      "name": "ItemPriceSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "nft",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        }
      ],
      "name": "ItemSold",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint96",
          "name": "feeBps",
          "type": "uint96"
        }
      ],
      "name": "PlatformFeeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "ProceedsWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "auctions",
      "outputs": [
        {
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "internalType": "uint40",
          "name": "end",
          "type": "uint40"
        },
        {
          "internalType": "uint96",
          "name": "bid",
          "type": "uint96"
        },
        {
          "internalType": "address",
          "name": "bidder",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nft",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "bid",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nft",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "buyItem",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nft",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "cancelAuction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nft",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint40",
          "name": "duration",
          "type": "uint40"
        }
      ],
      "name": "createAuction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nft",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "delistItem",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nft",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "endAuction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeRecipient",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nft",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint96",
          "name": "price",
          "type": "uint96"
        }
      ],
      "name": "listItem",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "listings",
      "outputs": [
        {
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "internalType": "uint96",
          "name": "price",
          "type": "uint96"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "platformFeeBps",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "proceeds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nft",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "rescueNFT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint96",
          "name": "bps",
          "type": "uint96"
        }
      ],
      "name": "setPlatformFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nft",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint96",
          "name": "newPrice",
          "type": "uint96"
        }
      ],
      "name": "setPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawProceeds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xfbd5076746b97dcef969de6448d9c6b65e4aa6c61a5d84db7f00868f6ef7133b",
  "receipt": {
    "to": null,
    "from": "0x4D98065935Bf2181703af7dC6be47fA44bEa881b",
    "contractAddress": "0x5e3ef51F0a662dF65dea3e115C689E0cDE2A0F37",
    "transactionIndex": 142,
    "gasUsed": "1799897",
    "logsBloom": "0x
    "blockHash": "0xf39b9aa260337b5076669fad6b3a90310d458f6c79c8a0132228e60d48879146",
    "transactionHash": "0xfbd5076746b97dcef969de6448d9c6b65e4aa6c61a5d84db7f00868f6ef7133b",
    "logs": [
      {
        "transactionIndex": 142,
        "blockNumber": 8853205,
        "transactionHash": "0xfbd5076746b97dcef969de6448d9c6b65e4aa6c61a5d84db7f00868f6ef7133b",
        "address": "0x5e3ef51F0a662dF65dea3e115C689E0cDE2A0F37",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000004d98065935bf2181703af7dc6be47fa44bea881b"
        ],
        "data": "0x",
        "logIndex": 273,
        "blockHash": "0xf39b9aa260337b5076669fad6b3a90310d458f6c79c8a0132228e60d48879146"
      },
      {
        "transactionIndex": 142,
        "blockNumber": 8853205,
        "transactionHash": "0xfbd5076746b97dcef969de6448d9c6b65e4aa6c61a5d84db7f00868f6ef7133b",
        "address": "0x5e3ef51F0a662dF65dea3e115C689E0cDE2A0F37",
        "topics": [
          "0x1e6478ac12ebdcc5503c6df8708a2472c76959aad3ed4089d4f4bdac6b3d9709",
          "0x0000000000000000000000004d98065935bf2181703af7dc6be47fa44bea881b"
        ],
        "data": "0x00000000000000000000000000000000000000000000000000000000000000fa",
        "logIndex": 274,
        "blockHash": "0xf39b9aa260337b5076669fad6b3a90310d458f6c79c8a0132228e60d48879146"
      }
    ],
    "blockNumber": 8853205,
    "cumulativeGasUsed": "16402773",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x4D98065935Bf2181703af7dC6be47fA44bEa881b",
    250
  ],
  "numDeployments": 2,
  "solcInputHash": "b27f5fd528c66aad39aa0db4d228af0c",
  "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"_feeBps\",\"type\":\"uint96\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nft\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"end\",\"type\":\"uint256\"}],\"name\":\"AuctionCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nft\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"AuctionEnded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nft\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BidPlaced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nft\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"ItemDelisted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nft\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"ItemListed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nft\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPrice\",\"type\":\"uint256\"}],\"name\":\"ItemPriceSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nft\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"}],\"name\":\"ItemSold\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"feeBps\",\"type\":\"uint96\"}],\"name\":\"PlatformFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ProceedsWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"auctions\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint40\",\"name\":\"end\",\"type\":\"uint40\"},{\"internalType\":\"uint96\",\"name\":\"bid\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nft\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"bid\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nft\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"buyItem\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nft\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"cancelAuction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nft\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint40\",\"name\":\"duration\",\"type\":\"uint40\"}],\"name\":\"createAuction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nft\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"delistItem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nft\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"endAuction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nft\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint96\",\"name\":\"price\",\"type\":\"uint96\"}],\"name\":\"listItem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"listings\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"price\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"platformFeeBps\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"proceeds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nft\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"rescueNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"bps\",\"type\":\"uint96\"}],\"name\":\"setPlatformFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nft\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint96\",\"name\":\"newPrice\",\"type\":\"uint96\"}],\"name\":\"setPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawProceeds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"NftMarketplace\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Listados fijos + subastas, royalties\\u00a0EIP\\u20112981, fee de plataforma y pull\\u2011payments.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NftMarketPlace.sol\":\"NftMarketplace\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC2981.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC2981.sol)\\n\\npragma solidity >=0.6.2;\\n\\nimport {IERC165} from \\\"../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Interface for the NFT Royalty Standard.\\n *\\n * A standardized way to retrieve royalty payment information for non-fungible tokens (NFTs) to enable universal\\n * support for royalty payments across all NFT marketplaces and ecosystem participants.\\n */\\ninterface IERC2981 is IERC165 {\\n    /**\\n     * @dev Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of\\n     * exchange. The royalty amount is denominated and should be paid in that same unit of exchange.\\n     *\\n     * NOTE: ERC-2981 allows setting the royalty to 100% of the price. In that case all the price would be sent to the\\n     * royalty receiver and 0 tokens to the seller. Contracts dealing with royalty should consider empty transfers.\\n     */\\n    function royaltyInfo(\\n        uint256 tokenId,\\n        uint256 salePrice\\n    ) external view returns (address receiver, uint256 royaltyAmount);\\n}\\n\",\"keccak256\":\"0xafab0e6c71905303c47dd254168cb31efc91f0ae284cde609b0202f97f85469e\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity >=0.6.2;\\n\\nimport {IERC165} from \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC-721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\\n     *   {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the address zero.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity >=0.5.0;\\n\\n/**\\n * @title ERC-721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC-721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\\n     * reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/utils/ERC721Holder.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC721Receiver} from \\\"../IERC721Receiver.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC721Receiver} interface.\\n *\\n * Accepts all token transfers.\\n * Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or\\n * {IERC721-setApprovalForAll}.\\n */\\nabstract contract ERC721Holder is IERC721Receiver {\\n    /**\\n     * @dev See {IERC721Receiver-onERC721Received}.\\n     *\\n     * Always returns `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(address, address, uint256, bytes memory) public virtual returns (bytes4) {\\n        return this.onERC721Received.selector;\\n    }\\n}\\n\",\"keccak256\":\"0xaad20f8713b5cd98114278482d5d91b9758f9727048527d582e8e88fd4901fd8\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/common/ERC2981.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (token/common/ERC2981.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC2981} from \\\"../../interfaces/IERC2981.sol\\\";\\nimport {IERC165, ERC165} from \\\"../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the NFT Royalty Standard, a standardized way to retrieve royalty payment information.\\n *\\n * Royalty information can be specified globally for all token ids via {_setDefaultRoyalty}, and/or individually for\\n * specific token ids via {_setTokenRoyalty}. The latter takes precedence over the first.\\n *\\n * Royalty is specified as a fraction of sale price. {_feeDenominator} is overridable but defaults to 10000, meaning the\\n * fee is specified in basis points by default.\\n *\\n * IMPORTANT: ERC-2981 only specifies a way to signal royalty information and does not enforce its payment. See\\n * https://eips.ethereum.org/EIPS/eip-2981#optional-royalty-payments[Rationale] in the ERC. Marketplaces are expected to\\n * voluntarily pay royalties together with sales, but note that this standard is not yet widely supported.\\n */\\nabstract contract ERC2981 is IERC2981, ERC165 {\\n    struct RoyaltyInfo {\\n        address receiver;\\n        uint96 royaltyFraction;\\n    }\\n\\n    RoyaltyInfo private _defaultRoyaltyInfo;\\n    mapping(uint256 tokenId => RoyaltyInfo) private _tokenRoyaltyInfo;\\n\\n    /**\\n     * @dev The default royalty set is invalid (eg. (numerator / denominator) >= 1).\\n     */\\n    error ERC2981InvalidDefaultRoyalty(uint256 numerator, uint256 denominator);\\n\\n    /**\\n     * @dev The default royalty receiver is invalid.\\n     */\\n    error ERC2981InvalidDefaultRoyaltyReceiver(address receiver);\\n\\n    /**\\n     * @dev The royalty set for a specific `tokenId` is invalid (eg. (numerator / denominator) >= 1).\\n     */\\n    error ERC2981InvalidTokenRoyalty(uint256 tokenId, uint256 numerator, uint256 denominator);\\n\\n    /**\\n     * @dev The royalty receiver for `tokenId` is invalid.\\n     */\\n    error ERC2981InvalidTokenRoyaltyReceiver(uint256 tokenId, address receiver);\\n\\n    /// @inheritdoc IERC165\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC165) returns (bool) {\\n        return interfaceId == type(IERC2981).interfaceId || super.supportsInterface(interfaceId);\\n    }\\n\\n    /// @inheritdoc IERC2981\\n    function royaltyInfo(\\n        uint256 tokenId,\\n        uint256 salePrice\\n    ) public view virtual returns (address receiver, uint256 amount) {\\n        RoyaltyInfo storage _royaltyInfo = _tokenRoyaltyInfo[tokenId];\\n        address royaltyReceiver = _royaltyInfo.receiver;\\n        uint96 royaltyFraction = _royaltyInfo.royaltyFraction;\\n\\n        if (royaltyReceiver == address(0)) {\\n            royaltyReceiver = _defaultRoyaltyInfo.receiver;\\n            royaltyFraction = _defaultRoyaltyInfo.royaltyFraction;\\n        }\\n\\n        uint256 royaltyAmount = (salePrice * royaltyFraction) / _feeDenominator();\\n\\n        return (royaltyReceiver, royaltyAmount);\\n    }\\n\\n    /**\\n     * @dev The denominator with which to interpret the fee set in {_setTokenRoyalty} and {_setDefaultRoyalty} as a\\n     * fraction of the sale price. Defaults to 10000 so fees are expressed in basis points, but may be customized by an\\n     * override.\\n     */\\n    function _feeDenominator() internal pure virtual returns (uint96) {\\n        return 10000;\\n    }\\n\\n    /**\\n     * @dev Sets the royalty information that all ids in this contract will default to.\\n     *\\n     * Requirements:\\n     *\\n     * - `receiver` cannot be the zero address.\\n     * - `feeNumerator` cannot be greater than the fee denominator.\\n     */\\n    function _setDefaultRoyalty(address receiver, uint96 feeNumerator) internal virtual {\\n        uint256 denominator = _feeDenominator();\\n        if (feeNumerator > denominator) {\\n            // Royalty fee will exceed the sale price\\n            revert ERC2981InvalidDefaultRoyalty(feeNumerator, denominator);\\n        }\\n        if (receiver == address(0)) {\\n            revert ERC2981InvalidDefaultRoyaltyReceiver(address(0));\\n        }\\n\\n        _defaultRoyaltyInfo = RoyaltyInfo(receiver, feeNumerator);\\n    }\\n\\n    /**\\n     * @dev Removes default royalty information.\\n     */\\n    function _deleteDefaultRoyalty() internal virtual {\\n        delete _defaultRoyaltyInfo;\\n    }\\n\\n    /**\\n     * @dev Sets the royalty information for a specific token id, overriding the global default.\\n     *\\n     * Requirements:\\n     *\\n     * - `receiver` cannot be the zero address.\\n     * - `feeNumerator` cannot be greater than the fee denominator.\\n     */\\n    function _setTokenRoyalty(uint256 tokenId, address receiver, uint96 feeNumerator) internal virtual {\\n        uint256 denominator = _feeDenominator();\\n        if (feeNumerator > denominator) {\\n            // Royalty fee will exceed the sale price\\n            revert ERC2981InvalidTokenRoyalty(tokenId, feeNumerator, denominator);\\n        }\\n        if (receiver == address(0)) {\\n            revert ERC2981InvalidTokenRoyaltyReceiver(tokenId, address(0));\\n        }\\n\\n        _tokenRoyaltyInfo[tokenId] = RoyaltyInfo(receiver, feeNumerator);\\n    }\\n\\n    /**\\n     * @dev Resets royalty information for the token id back to the global default.\\n     */\\n    function _resetTokenRoyalty(uint256 tokenId) internal virtual {\\n        delete _tokenRoyaltyInfo[tokenId];\\n    }\\n}\\n\",\"keccak256\":\"0xa33062c6e0675a74a27b06a4ae4c6ad4d3b7219e27d9c146a4ac57295096d393\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Pausable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract Pausable is Context {\\n    bool private _paused;\\n\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    /**\\n     * @dev The operation failed because the contract is paused.\\n     */\\n    error EnforcedPause();\\n\\n    /**\\n     * @dev The operation failed because the contract is not paused.\\n     */\\n    error ExpectedPause();\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        _requireNotPaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        _requirePaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is paused.\\n     */\\n    function _requireNotPaused() internal view virtual {\\n        if (paused()) {\\n            revert EnforcedPause();\\n        }\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is not paused.\\n     */\\n    function _requirePaused() internal view virtual {\\n        if (!paused()) {\\n            revert ExpectedPause();\\n        }\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n}\\n\",\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\\n * consider using {ReentrancyGuardTransient} instead.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    /**\\n     * @dev Unauthorized reentrant call.\\n     */\\n    error ReentrancyGuardReentrantCall();\\n\\n    constructor() {\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\\n        if (_status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n */\\nabstract contract ERC165 is IERC165 {\\n    /// @inheritdoc IERC165\\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity >=0.4.16;\\n\\n/**\\n * @dev Interface of the ERC-165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\"},\"contracts/NftMarketPlace.sol\":{\"content\":\"// SPDX\\u2011License\\u2011Identifier: MIT\\r\\npragma solidity ^0.8.28;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/utils/Pausable.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/common/ERC2981.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/utils/introspection/IERC165.sol\\\";\\r\\n\\r\\n/**\\r\\n * @title NftMarketplace\\r\\n * @notice Listados fijos + subastas, royalties\\u00a0EIP\\u20112981, fee de plataforma y pull\\u2011payments.\\r\\n */\\r\\ncontract NftMarketplace is ReentrancyGuard, Pausable, Ownable, ERC721Holder {\\r\\n    /*\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500 Config \\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500*/\\r\\n    uint96  public platformFeeBps;           // 250\\u00a0=\\u00a02.5\\u202f%\\r\\n    address public feeRecipient;\\r\\n\\r\\n    constructor(address _recipient, uint96 _feeBps) Ownable(msg.sender) {\\r\\n        _setPlatformFee(_recipient, _feeBps);\\r\\n    }\\r\\n\\r\\n    struct Listing { address seller; uint96 price; }\\r\\n    struct Auction { address seller; uint40 end; uint96 bid; address bidder; }\\r\\n\\r\\n    mapping(address => mapping(uint256 => Listing)) public listings;\\r\\n    mapping(address => mapping(uint256 => Auction)) public auctions;\\r\\n    mapping(address => uint256)                     public proceeds; // pull pattern\\r\\n\\r\\n    /*\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500 Eventos \\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500*/\\r\\n    event ItemListed   (address indexed nft, uint256 id, address seller, uint256 price);\\r\\n    event ItemPriceSet (address indexed nft, uint256 id, uint256 newPrice);\\r\\n    event ItemDelisted (address indexed nft, uint256 id);\\r\\n    event ItemSold     (address indexed nft, uint256 id, uint256 price, address buyer);\\r\\n    event AuctionCreated(address indexed nft, uint256 id, uint256 end);\\r\\n    event BidPlaced    (address indexed nft, uint256 id, address bidder, uint256 amount);\\r\\n    event AuctionEnded (address indexed nft, uint256 id, address winner, uint256 amount);\\r\\n    event ProceedsWithdrawn(address indexed to, uint256 amount);\\r\\n    event PlatformFeeUpdated(address indexed recipient, uint96 feeBps);\\r\\n\\r\\n    /*\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500 Admin fee \\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500*/\\r\\n    function setPlatformFee(address recipient, uint96 bps) external onlyOwner {\\r\\n        _setPlatformFee(recipient, bps);\\r\\n    }\\r\\n    function _setPlatformFee(address recipient, uint96 bps) private {\\r\\n        require(recipient != address(0), \\\"recipient=0\\\");\\r\\n        require(bps <= 1_000, \\\"fee>10%\\\");       // max 10\\u202f%\\r\\n        feeRecipient   = recipient;\\r\\n        platformFeeBps = bps;\\r\\n        emit PlatformFeeUpdated(recipient, bps);\\r\\n    }\\r\\n\\r\\n    /*\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500 Listados fijos \\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500*/\\r\\n    function listItem(address nft, uint256 id, uint96 price)\\r\\n        external nonReentrant whenNotPaused\\r\\n    {\\r\\n        require(price > 0, \\\"price=0\\\");\\r\\n        require(listings[nft][id].seller == address(0), \\\"listed\\\");\\r\\n        require(auctions[nft][id].seller == address(0), \\\"in auction\\\");\\r\\n\\r\\n        IERC721(nft).safeTransferFrom(msg.sender, address(this), id);\\r\\n        listings[nft][id] = Listing(msg.sender, price);\\r\\n        emit ItemListed(nft, id, msg.sender, price);\\r\\n    }\\r\\n\\r\\n    function setPrice(address nft, uint256 id, uint96 newPrice)\\r\\n        external nonReentrant whenNotPaused\\r\\n    {\\r\\n        require(listings[nft][id].seller == msg.sender, \\\"!seller\\\");\\r\\n        require(newPrice > 0, \\\"price=0\\\");\\r\\n        listings[nft][id].price = newPrice;\\r\\n        emit ItemPriceSet(nft, id, newPrice);\\r\\n    }\\r\\n\\r\\n    function delistItem(address nft, uint256 id)\\r\\n        external nonReentrant\\r\\n    {\\r\\n        require(listings[nft][id].seller == msg.sender, \\\"!seller\\\");\\r\\n        delete listings[nft][id];\\r\\n        IERC721(nft).safeTransferFrom(address(this), msg.sender, id);\\r\\n        emit ItemDelisted(nft, id);\\r\\n    }\\r\\n\\r\\n    function buyItem(address nft, uint256 id)\\r\\n        external payable nonReentrant whenNotPaused\\r\\n    {\\r\\n        Listing memory l = listings[nft][id];\\r\\n        require(l.price > 0, \\\"not listed\\\");\\r\\n        require(msg.value == l.price, \\\"price mismatch\\\");\\r\\n        delete listings[nft][id];\\r\\n\\r\\n        _splitAndStore(nft, id, l.seller, msg.value);\\r\\n        IERC721(nft).safeTransferFrom(address(this), msg.sender, id);\\r\\n        emit ItemSold(nft, id, msg.value, msg.sender);\\r\\n    }\\r\\n\\r\\n    /*\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500 Subastas \\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500*/\\r\\n    function createAuction(address nft, uint256 id, uint40 duration)\\r\\n        external nonReentrant whenNotPaused\\r\\n    {\\r\\n        require(duration >= 1 hours, \\\"dur<1h\\\");\\r\\n        require(auctions[nft][id].seller == address(0), \\\"auctioned\\\");\\r\\n        require(listings[nft][id].seller == address(0), \\\"listed\\\");\\r\\n\\r\\n        IERC721(nft).safeTransferFrom(msg.sender, address(this), id);\\r\\n        auctions[nft][id] = Auction(msg.sender, uint40(block.timestamp) + duration, 0, address(0));\\r\\n        emit AuctionCreated(nft, id, block.timestamp + duration);\\r\\n    }\\r\\n\\r\\n    function cancelAuction(address nft, uint256 id)\\r\\n        external nonReentrant\\r\\n    {\\r\\n        Auction memory a = auctions[nft][id];\\r\\n        require(a.seller == msg.sender, \\\"!auctionSeller\\\");\\r\\n        require(a.bid == 0, \\\"hasBid\\\");\\r\\n        delete auctions[nft][id];\\r\\n        IERC721(nft).safeTransferFrom(address(this), a.seller, id);\\r\\n        emit ItemDelisted(nft, id);\\r\\n    }\\r\\n\\r\\n    function bid(address nft, uint256 id) external payable nonReentrant whenNotPaused {\\r\\n        Auction storage a = auctions[nft][id];\\r\\n        require(block.timestamp < a.end, \\\"ended\\\");\\r\\n        require(msg.value > a.bid, \\\"low bid\\\");\\r\\n\\r\\n        if (a.bid > 0) proceeds[a.bidder] += a.bid; // pull refund\\r\\n        a.bid    = uint96(msg.value);\\r\\n        a.bidder = msg.sender;\\r\\n        emit BidPlaced(nft, id, msg.sender, msg.value);\\r\\n    }\\r\\n\\r\\n    function endAuction(address nft, uint256 id) external nonReentrant {\\r\\n        Auction memory a = auctions[nft][id];\\r\\n        require(a.end > 0 && block.timestamp >= a.end, \\\"not ended\\\");\\r\\n        delete auctions[nft][id];\\r\\n\\r\\n        if (a.bid == 0) {\\r\\n            IERC721(nft).safeTransferFrom(address(this), a.seller, id);\\r\\n            emit AuctionEnded(nft, id, address(0), 0);\\r\\n            return;\\r\\n        }\\r\\n        _splitAndStore(nft, id, a.seller, a.bid);\\r\\n        IERC721(nft).safeTransferFrom(address(this), a.bidder, id);\\r\\n        emit AuctionEnded(nft, id, a.bidder, a.bid);\\r\\n    }\\r\\n\\r\\n    /*\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500 Split royalties + fee \\u2500\\u2500\\u2500*/\\r\\n    function _splitAndStore(address nft, uint256 id, address seller, uint256 gross) private {\\r\\n        uint256 amount = gross;\\r\\n\\r\\n        // 1) Royalties\\r\\n        if (IERC165(nft).supportsInterface(type(IERC2981).interfaceId)) {\\r\\n            (address recv, uint256 royalty) = IERC2981(nft).royaltyInfo(id, gross);\\r\\n            if (royalty > 0) { amount -= royalty; proceeds[recv] += royalty; }\\r\\n        }\\r\\n        // 2) Fee plataforma\\r\\n        if (platformFeeBps > 0) {\\r\\n            uint256 fee = (gross * platformFeeBps) / 10_000;\\r\\n            amount -= fee;\\r\\n            proceeds[feeRecipient] += fee;\\r\\n        }\\r\\n        // 3) Vendedor\\r\\n        proceeds[seller] += amount;\\r\\n    }\\r\\n\\r\\n    /*\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500 Retirada (pull\\u2011payments) \\u2500*/\\r\\n    function withdrawProceeds() external nonReentrant {\\r\\n        uint256 bal = proceeds[msg.sender];\\r\\n        require(bal > 0, \\\"0 balance\\\");\\r\\n        proceeds[msg.sender] = 0;\\r\\n        (bool ok, ) = msg.sender.call{value: bal}(\\\"\\\");\\r\\n        require(ok, \\\"ETH send fail\\\");\\r\\n        emit ProceedsWithdrawn(msg.sender, bal);\\r\\n    }\\r\\n\\r\\n    /*\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500 Pausable \\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500*/\\r\\n    function pause()  external onlyOwner { _pause(); }\\r\\n    function unpause() external onlyOwner { _unpause(); }\\r\\n\\r\\n    /*\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500 Rescate de NFT \\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500*/\\r\\n    function rescueNFT(address nft, uint256 id, address to) external onlyOwner {\\r\\n        IERC721(nft).safeTransferFrom(address(this), to, id);\\r\\n    }\\r\\n\\r\\n    /*\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500 ETH fallback \\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500*/\\r\\n    receive() external payable {}\\r\\n\\r\\n}\\r\\n\",\"keccak256\":\"0x2b8962172a2afac280fe85bc936853038fa5043c61d83f0d8668cceafa41baf5\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405161204f38038061204f83398101604081905261002f916101c4565b6001600055338061005b57604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b61006481610076565b5061006f82826100d0565b5050610216565b600180546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0382166101145760405162461bcd60e51b815260206004820152600b60248201526a0726563697069656e743d360ac1b6044820152606401610052565b6103e8816001600160601b031611156101595760405162461bcd60e51b81526020600482015260076024820152666665653e31302560c81b6044820152606401610052565b6001600160601b0381166001600160a01b0383166c0100000000000000000000000081026001600160601b0319168217600255604051918252907f1e6478ac12ebdcc5503c6df8708a2472c76959aad3ed4089d4f4bdac6b3d97099060200160405180910390a25050565b600080604083850312156101d757600080fd5b82516001600160a01b03811681146101ee57600080fd5b60208401519092506001600160601b038116811461020b57600080fd5b809150509250929050565b611e2a806102256000396000f3fe6080604052600436106101435760003560e01c8063715018a6116100b65780638da5cb5b1161006f5780638da5cb5b146104ab5780639038e693146104ce5780639f37092a146104e3578063ad9a0369146104f6578063df651d7114610516578063f2fde38b1461053657600080fd5b8063715018a6146104015780637fe5d7b714610416578063811c57e3146104365780638456cb5914610456578063859b97fe1461046b57806388cedbc41461048b57600080fd5b80633f4ba83a116101085780633f4ba83a146102a757806344f91c1e146102bc578063469048401461036c57806346b02025146103ab57806359d667a5146103cb5780635c975abb146103de57600080fd5b806207df301461014f578063150b7a02146101ce57806321fab9251461021257806322dcd13e1461023457806335adde541461026c57600080fd5b3661014a57005b600080fd5b34801561015b57600080fd5b506101a261016a366004611a88565b60036020908152600092835260408084209091529082529020546001600160a01b03811690600160a01b90046001600160601b031682565b604080516001600160a01b0390931683526001600160601b039091166020830152015b60405180910390f35b3480156101da57600080fd5b506101f96101e9366004611aca565b630a85bd0160e11b949350505050565b6040516001600160e01b031990911681526020016101c5565b34801561021e57600080fd5b5061023261022d366004611bce565b610556565b005b34801561024057600080fd5b50600254610254906001600160601b031681565b6040516001600160601b0390911681526020016101c5565b34801561027857600080fd5b50610299610287366004611c0c565b60056020526000908152604090205481565b6040519081526020016101c5565b3480156102b357600080fd5b5061023261076d565b3480156102c857600080fd5b5061032a6102d7366004611a88565b6004602090815260009283526040808420909152908252902080546001909101546001600160a01b0380831692600160a01b900464ffffffffff16916001600160601b03811691600160601b9091041684565b604080516001600160a01b03958616815264ffffffffff90941660208501526001600160601b03909216918301919091529190911660608201526080016101c5565b34801561037857600080fd5b5060025461039390600160601b90046001600160a01b031681565b6040516001600160a01b0390911681526020016101c5565b3480156103b757600080fd5b506102326103c6366004611bce565b61077f565b6102326103d9366004611a88565b6108a5565b3480156103ea57600080fd5b5060015460ff1660405190151581526020016101c5565b34801561040d57600080fd5b50610232610a34565b34801561042257600080fd5b50610232610431366004611c30565b610a46565b34801561044257600080fd5b50610232610451366004611c65565b610a58565b34801561046257600080fd5b50610232610cb6565b34801561047757600080fd5b50610232610486366004611a88565b610cc6565b34801561049757600080fd5b506102326104a6366004611a88565b610e8c565b3480156104b757600080fd5b5060015461010090046001600160a01b0316610393565b3480156104da57600080fd5b50610232611147565b6102326104f1366004611a88565b611270565b34801561050257600080fd5b50610232610511366004611a88565b611431565b34801561052257600080fd5b50610232610531366004611cb1565b611561565b34801561054257600080fd5b50610232610551366004611c0c565b6115d0565b61055e61160e565b610566611638565b6000816001600160601b0316116105ae5760405162461bcd60e51b8152602060048201526007602482015266070726963653d360cc1b60448201526064015b60405180910390fd5b6001600160a01b038381166000908152600360209081526040808320868452909152902054161561060a5760405162461bcd60e51b81526020600482015260066024820152651b1a5cdd195960d21b60448201526064016105a5565b6001600160a01b038381166000908152600460209081526040808320868452909152902054161561066a5760405162461bcd60e51b815260206004820152600a60248201526934b71030bab1ba34b7b760b11b60448201526064016105a5565b604051632142170760e11b81526001600160a01b038416906342842e0e9061069a90339030908790600401611ce8565b600060405180830381600087803b1580156106b457600080fd5b505af11580156106c8573d6000803e3d6000fd5b5050604080518082018252338082526001600160601b0386811660208085018281526001600160a01b038c81166000818152600385528981208e8252855289902097519251909516600160a01b02911617909455845189815293840192909252928201529092507fb29a3c5d9c9eb8230bd277c54293a0a15e98cd5592a3e0d470fe9ce59fed54f191506060015b60405180910390a26107686001600055565b505050565b61077561165c565b61077d61168f565b565b61078761160e565b61078f611638565b6001600160a01b0383811660009081526003602090815260408083208684529091529020541633146107ed5760405162461bcd60e51b815260206004820152600760248201526610b9b2b63632b960c91b60448201526064016105a5565b6000816001600160601b0316116108305760405162461bcd60e51b8152602060048201526007602482015266070726963653d360cc1b60448201526064016105a5565b6001600160a01b03838116600081815260036020908152604080832087845282529182902080546001600160601b038716600160a01b81029190961617905581518681529081019390935290917f732149560302870ada662dc9ffdde8c1bd602a085c9489927c10e0c9e96a18fe9101610756565b6108ad61160e565b6108b5611638565b6001600160a01b038216600090815260046020908152604080832084845290915290208054600160a01b900464ffffffffff16421061091e5760405162461bcd60e51b8152602060048201526005602482015264195b99195960da1b60448201526064016105a5565b60018101546001600160601b031634116109645760405162461bcd60e51b81526020600482015260076024820152661b1bddc8189a5960ca1b60448201526064016105a5565b60018101546001600160601b0316156109bc5760018101546001600160a01b03600160601b820416600090815260056020526040812080546001600160601b03909316929091906109b6908490611d22565b90915550505b600160601b339081026001600160601b03349081169190911760018401556040805185815260208101939093528201526001600160a01b038416907f0158f5674dc243762459b88cfc91b10d2d1ef9d40821cca978c2b680aa444682906060015b60405180910390a250610a306001600055565b5050565b610a3c61165c565b61077d60006116e1565b610a4e61165c565b610a30828261173b565b610a6061160e565b610a68611638565b610e108164ffffffffff161015610aaa5760405162461bcd60e51b81526020600482015260066024820152650c8eae47862d60d31b60448201526064016105a5565b6001600160a01b0383811660009081526004602090815260408083208684529091529020541615610b095760405162461bcd60e51b8152602060048201526009602482015268185d58dd1a5bdb995960ba1b60448201526064016105a5565b6001600160a01b0383811660009081526003602090815260408083208684529091529020541615610b655760405162461bcd60e51b81526020600482015260066024820152651b1a5cdd195960d21b60448201526064016105a5565b604051632142170760e11b81526001600160a01b038416906342842e0e90610b9590339030908790600401611ce8565b600060405180830381600087803b158015610baf57600080fd5b505af1158015610bc3573d6000803e3d6000fd5b5050604080516080810190915233815291505060208101610be48342611d3b565b64ffffffffff90811682526000602080840182905260409384018290526001600160a01b038881168084526004835285842089855283529285902086518154938801518616600160a01b026001600160c81b03199094169083161792909217825593850151606090950151909316600160601b026001600160601b0394909416939093176001909201919091557f4560b4b4d2eec0d9c2feb420083427dbdb8371b8df7fc5471791ebe492622f69908490610ca190851642611d22565b60408051928352602083019190915201610756565b610cbe61165c565b61077d61182b565b610cce61160e565b6001600160a01b03828116600090815260046020908152604080832085845282529182902082516080810184528154808616808352600160a01b90910464ffffffffff16938201939093526001909101546001600160601b03811693820193909352600160601b9092049092166060820152903314610d805760405162461bcd60e51b815260206004820152600e60248201526d10b0bab1ba34b7b729b2b63632b960911b60448201526064016105a5565b60408101516001600160601b031615610dc45760405162461bcd60e51b81526020600482015260066024820152651a185cd09a5960d21b60448201526064016105a5565b6001600160a01b038316600081815260046020818152604080842087855290915280832080546001600160c81b03191681556001019290925583519151632142170760e11b81526342842e0e92610e1f923092889101611ce8565b600060405180830381600087803b158015610e3957600080fd5b505af1158015610e4d573d6000803e3d6000fd5b50505050826001600160a01b03167faca2f4260fb2b4e6aa5f68a07c66e0a461f508267354a97bbefb46e09c9b875d83604051610a1d91815260200190565b610e9461160e565b6001600160a01b038281166000908152600460209081526040808320858452825291829020825160808101845281548086168252600160a01b900464ffffffffff169281018390526001909101546001600160601b03811693820193909352600160601b90920490921660608201529015801590610f1d5750806020015164ffffffffff164210155b610f555760405162461bcd60e51b81526020600482015260096024820152681b9bdd08195b99195960ba1b60448201526064016105a5565b6001600160a01b038316600090815260046020908152604080832085845290915280822080546001600160c81b03191681556001018290558201516001600160601b03169003611053578051604051632142170760e11b81526001600160a01b038516916342842e0e91610fcf9130918790600401611ce8565b600060405180830381600087803b158015610fe957600080fd5b505af1158015610ffd573d6000803e3d6000fd5b5050604080518581526000602082018190528183015290516001600160a01b03871693507f4d31a5599cdb48031c1f03259adbd513be468c5735012719a1a9850869b558b192509081900360600190a25061113d565b6110708383836000015184604001516001600160601b0316611866565b6060810151604051632142170760e11b81526001600160a01b038516916342842e0e916110a39130918790600401611ce8565b600060405180830381600087803b1580156110bd57600080fd5b505af11580156110d1573d6000803e3d6000fd5b50505050826001600160a01b03167f4d31a5599cdb48031c1f03259adbd513be468c5735012719a1a9850869b558b18383606001518460400151604051610a1d939291909283526001600160a01b039190911660208301526001600160601b0316604082015260600190565b610a306001600055565b61114f61160e565b33600090815260056020526040902054806111985760405162461bcd60e51b8152602060048201526009602482015268302062616c616e636560b81b60448201526064016105a5565b336000818152600560205260408082208290555190919083908381818185875af1925050503d80600081146111e9576040519150601f19603f3d011682016040523d82523d6000602084013e6111ee565b606091505b505090508061122f5760405162461bcd60e51b815260206004820152600d60248201526c115512081cd95b990819985a5b609a1b60448201526064016105a5565b60405182815233907f0f2fb75cc1977a496e94837f859e957f68e26e70dc1b75d9945ee92ae57969ba9060200160405180910390a2505061077d6001600055565b61127861160e565b611280611638565b6001600160a01b0382811660009081526003602090815260408083208584528252918290208251808401909352549283168252600160a01b9092046001600160601b0316918101829052906113045760405162461bcd60e51b815260206004820152600a6024820152691b9bdd081b1a5cdd195960b21b60448201526064016105a5565b80602001516001600160601b031634146113515760405162461bcd60e51b815260206004820152600e60248201526d0e0e4d2c6ca40dad2e6dac2e8c6d60931b60448201526064016105a5565b6001600160a01b03831660009081526003602090815260408083208584529091528120558051611385908490849034611866565b604051632142170760e11b81526001600160a01b038416906342842e0e906113b590309033908790600401611ce8565b600060405180830381600087803b1580156113cf57600080fd5b505af11580156113e3573d6000803e3d6000fd5b50506040805185815234602082015233918101919091526001600160a01b03861692507fa1dad7a242ad5440359512ca7f24d86adda6cb3cce179adb21025eed2442d7e69150606001610a1d565b61143961160e565b6001600160a01b0382811660009081526003602090815260408083208584529091529020541633146114975760405162461bcd60e51b815260206004820152600760248201526610b9b2b63632b960c91b60448201526064016105a5565b6001600160a01b03821660008181526003602090815260408083208584529091528082209190915551632142170760e11b81526342842e0e906114e290309033908690600401611ce8565b600060405180830381600087803b1580156114fc57600080fd5b505af1158015611510573d6000803e3d6000fd5b50505050816001600160a01b03167faca2f4260fb2b4e6aa5f68a07c66e0a461f508267354a97bbefb46e09c9b875d8260405161154f91815260200190565b60405180910390a2610a306001600055565b61156961165c565b604051632142170760e11b81526001600160a01b038416906342842e0e9061159990309085908790600401611ce8565b600060405180830381600087803b1580156115b357600080fd5b505af11580156115c7573d6000803e3d6000fd5b50505050505050565b6115d861165c565b6001600160a01b03811661160257604051631e4fbdf760e01b8152600060048201526024016105a5565b61160b816116e1565b50565b60026000540361163157604051633ee5aeb560e01b815260040160405180910390fd5b6002600055565b60015460ff161561077d5760405163d93c066560e01b815260040160405180910390fd5b6001546001600160a01b0361010090910416331461077d5760405163118cdaa760e01b81523360048201526024016105a5565b611697611a50565b6001805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600180546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b03821661177f5760405162461bcd60e51b815260206004820152600b60248201526a0726563697069656e743d360ac1b60448201526064016105a5565b6103e8816001600160601b031611156117c45760405162461bcd60e51b81526020600482015260076024820152666665653e31302560c81b60448201526064016105a5565b6001600160601b0381166001600160a01b038316600160601b81026bffffffffffffffffffffffff19168217600255604051918252907f1e6478ac12ebdcc5503c6df8708a2472c76959aad3ed4089d4f4bdac6b3d97099060200160405180910390a25050565b611833611638565b6001805460ff1916811790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258336116c4565b6040516301ffc9a760e01b815263152a902d60e11b600482015281906001600160a01b038616906301ffc9a790602401602060405180830381865afa1580156118b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118d79190611d58565b1561199b5760405163152a902d60e11b8152600481018590526024810183905260009081906001600160a01b03881690632a55205a906044016040805180830381865afa15801561192c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119509190611d7a565b90925090508015611998576119658184611da8565b6001600160a01b038316600090815260056020526040812080549295508392909190611992908490611d22565b90915550505b50505b6002546001600160601b031615611a1c57600254600090612710906119c9906001600160601b031685611dbb565b6119d39190611dd2565b90506119df8183611da8565b600254600160601b90046001600160a01b0316600090815260056020526040812080549294508392909190611a15908490611d22565b9091555050505b6001600160a01b03831660009081526005602052604081208054839290611a44908490611d22565b90915550505050505050565b60015460ff1661077d57604051638dfc202b60e01b815260040160405180910390fd5b6001600160a01b038116811461160b57600080fd5b60008060408385031215611a9b57600080fd5b8235611aa681611a73565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215611ae057600080fd5b8435611aeb81611a73565b93506020850135611afb81611a73565b925060408501359150606085013567ffffffffffffffff811115611b1e57600080fd5b8501601f81018713611b2f57600080fd5b803567ffffffffffffffff811115611b4957611b49611ab4565b604051601f8201601f19908116603f0116810167ffffffffffffffff81118282101715611b7857611b78611ab4565b604052818152828201602001891015611b9057600080fd5b8160208401602083013760006020838301015280935050505092959194509250565b80356001600160601b0381168114611bc957600080fd5b919050565b600080600060608486031215611be357600080fd5b8335611bee81611a73565b925060208401359150611c0360408501611bb2565b90509250925092565b600060208284031215611c1e57600080fd5b8135611c2981611a73565b9392505050565b60008060408385031215611c4357600080fd5b8235611c4e81611a73565b9150611c5c60208401611bb2565b90509250929050565b600080600060608486031215611c7a57600080fd5b8335611c8581611a73565b925060208401359150604084013564ffffffffff81168114611ca657600080fd5b809150509250925092565b600080600060608486031215611cc657600080fd5b8335611cd181611a73565b9250602084013591506040840135611ca681611a73565b6001600160a01b039384168152919092166020820152604081019190915260600190565b634e487b7160e01b600052601160045260246000fd5b80820180821115611d3557611d35611d0c565b92915050565b64ffffffffff8181168382160190811115611d3557611d35611d0c565b600060208284031215611d6a57600080fd5b81518015158114611c2957600080fd5b60008060408385031215611d8d57600080fd5b8251611d9881611a73565b6020939093015192949293505050565b81810381811115611d3557611d35611d0c565b8082028115828204841417611d3557611d35611d0c565b600082611def57634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220abccb4ab27a0515e0dde630246857802d36f24dbb237f89e9379403121f2d2fa64736f6c634300081c0033",
  "deployedBytecode": "0x6080604052600436106101435760003560e01c8063715018a6116100b65780638da5cb5b1161006f5780638da5cb5b146104ab5780639038e693146104ce5780639f37092a146104e3578063ad9a0369146104f6578063df651d7114610516578063f2fde38b1461053657600080fd5b8063715018a6146104015780637fe5d7b714610416578063811c57e3146104365780638456cb5914610456578063859b97fe1461046b57806388cedbc41461048b57600080fd5b80633f4ba83a116101085780633f4ba83a146102a757806344f91c1e146102bc578063469048401461036c57806346b02025146103ab57806359d667a5146103cb5780635c975abb146103de57600080fd5b806207df301461014f578063150b7a02146101ce57806321fab9251461021257806322dcd13e1461023457806335adde541461026c57600080fd5b3661014a57005b600080fd5b34801561015b57600080fd5b506101a261016a366004611a88565b60036020908152600092835260408084209091529082529020546001600160a01b03811690600160a01b90046001600160601b031682565b604080516001600160a01b0390931683526001600160601b039091166020830152015b60405180910390f35b3480156101da57600080fd5b506101f96101e9366004611aca565b630a85bd0160e11b949350505050565b6040516001600160e01b031990911681526020016101c5565b34801561021e57600080fd5b5061023261022d366004611bce565b610556565b005b34801561024057600080fd5b50600254610254906001600160601b031681565b6040516001600160601b0390911681526020016101c5565b34801561027857600080fd5b50610299610287366004611c0c565b60056020526000908152604090205481565b6040519081526020016101c5565b3480156102b357600080fd5b5061023261076d565b3480156102c857600080fd5b5061032a6102d7366004611a88565b6004602090815260009283526040808420909152908252902080546001909101546001600160a01b0380831692600160a01b900464ffffffffff16916001600160601b03811691600160601b9091041684565b604080516001600160a01b03958616815264ffffffffff90941660208501526001600160601b03909216918301919091529190911660608201526080016101c5565b34801561037857600080fd5b5060025461039390600160601b90046001600160a01b031681565b6040516001600160a01b0390911681526020016101c5565b3480156103b757600080fd5b506102326103c6366004611bce565b61077f565b6102326103d9366004611a88565b6108a5565b3480156103ea57600080fd5b5060015460ff1660405190151581526020016101c5565b34801561040d57600080fd5b50610232610a34565b34801561042257600080fd5b50610232610431366004611c30565b610a46565b34801561044257600080fd5b50610232610451366004611c65565b610a58565b34801561046257600080fd5b50610232610cb6565b34801561047757600080fd5b50610232610486366004611a88565b610cc6565b34801561049757600080fd5b506102326104a6366004611a88565b610e8c565b3480156104b757600080fd5b5060015461010090046001600160a01b0316610393565b3480156104da57600080fd5b50610232611147565b6102326104f1366004611a88565b611270565b34801561050257600080fd5b50610232610511366004611a88565b611431565b34801561052257600080fd5b50610232610531366004611cb1565b611561565b34801561054257600080fd5b50610232610551366004611c0c565b6115d0565b61055e61160e565b610566611638565b6000816001600160601b0316116105ae5760405162461bcd60e51b8152602060048201526007602482015266070726963653d360cc1b60448201526064015b60405180910390fd5b6001600160a01b038381166000908152600360209081526040808320868452909152902054161561060a5760405162461bcd60e51b81526020600482015260066024820152651b1a5cdd195960d21b60448201526064016105a5565b6001600160a01b038381166000908152600460209081526040808320868452909152902054161561066a5760405162461bcd60e51b815260206004820152600a60248201526934b71030bab1ba34b7b760b11b60448201526064016105a5565b604051632142170760e11b81526001600160a01b038416906342842e0e9061069a90339030908790600401611ce8565b600060405180830381600087803b1580156106b457600080fd5b505af11580156106c8573d6000803e3d6000fd5b5050604080518082018252338082526001600160601b0386811660208085018281526001600160a01b038c81166000818152600385528981208e8252855289902097519251909516600160a01b02911617909455845189815293840192909252928201529092507fb29a3c5d9c9eb8230bd277c54293a0a15e98cd5592a3e0d470fe9ce59fed54f191506060015b60405180910390a26107686001600055565b505050565b61077561165c565b61077d61168f565b565b61078761160e565b61078f611638565b6001600160a01b0383811660009081526003602090815260408083208684529091529020541633146107ed5760405162461bcd60e51b815260206004820152600760248201526610b9b2b63632b960c91b60448201526064016105a5565b6000816001600160601b0316116108305760405162461bcd60e51b8152602060048201526007602482015266070726963653d360cc1b60448201526064016105a5565b6001600160a01b03838116600081815260036020908152604080832087845282529182902080546001600160601b038716600160a01b81029190961617905581518681529081019390935290917f732149560302870ada662dc9ffdde8c1bd602a085c9489927c10e0c9e96a18fe9101610756565b6108ad61160e565b6108b5611638565b6001600160a01b038216600090815260046020908152604080832084845290915290208054600160a01b900464ffffffffff16421061091e5760405162461bcd60e51b8152602060048201526005602482015264195b99195960da1b60448201526064016105a5565b60018101546001600160601b031634116109645760405162461bcd60e51b81526020600482015260076024820152661b1bddc8189a5960ca1b60448201526064016105a5565b60018101546001600160601b0316156109bc5760018101546001600160a01b03600160601b820416600090815260056020526040812080546001600160601b03909316929091906109b6908490611d22565b90915550505b600160601b339081026001600160601b03349081169190911760018401556040805185815260208101939093528201526001600160a01b038416907f0158f5674dc243762459b88cfc91b10d2d1ef9d40821cca978c2b680aa444682906060015b60405180910390a250610a306001600055565b5050565b610a3c61165c565b61077d60006116e1565b610a4e61165c565b610a30828261173b565b610a6061160e565b610a68611638565b610e108164ffffffffff161015610aaa5760405162461bcd60e51b81526020600482015260066024820152650c8eae47862d60d31b60448201526064016105a5565b6001600160a01b0383811660009081526004602090815260408083208684529091529020541615610b095760405162461bcd60e51b8152602060048201526009602482015268185d58dd1a5bdb995960ba1b60448201526064016105a5565b6001600160a01b0383811660009081526003602090815260408083208684529091529020541615610b655760405162461bcd60e51b81526020600482015260066024820152651b1a5cdd195960d21b60448201526064016105a5565b604051632142170760e11b81526001600160a01b038416906342842e0e90610b9590339030908790600401611ce8565b600060405180830381600087803b158015610baf57600080fd5b505af1158015610bc3573d6000803e3d6000fd5b5050604080516080810190915233815291505060208101610be48342611d3b565b64ffffffffff90811682526000602080840182905260409384018290526001600160a01b038881168084526004835285842089855283529285902086518154938801518616600160a01b026001600160c81b03199094169083161792909217825593850151606090950151909316600160601b026001600160601b0394909416939093176001909201919091557f4560b4b4d2eec0d9c2feb420083427dbdb8371b8df7fc5471791ebe492622f69908490610ca190851642611d22565b60408051928352602083019190915201610756565b610cbe61165c565b61077d61182b565b610cce61160e565b6001600160a01b03828116600090815260046020908152604080832085845282529182902082516080810184528154808616808352600160a01b90910464ffffffffff16938201939093526001909101546001600160601b03811693820193909352600160601b9092049092166060820152903314610d805760405162461bcd60e51b815260206004820152600e60248201526d10b0bab1ba34b7b729b2b63632b960911b60448201526064016105a5565b60408101516001600160601b031615610dc45760405162461bcd60e51b81526020600482015260066024820152651a185cd09a5960d21b60448201526064016105a5565b6001600160a01b038316600081815260046020818152604080842087855290915280832080546001600160c81b03191681556001019290925583519151632142170760e11b81526342842e0e92610e1f923092889101611ce8565b600060405180830381600087803b158015610e3957600080fd5b505af1158015610e4d573d6000803e3d6000fd5b50505050826001600160a01b03167faca2f4260fb2b4e6aa5f68a07c66e0a461f508267354a97bbefb46e09c9b875d83604051610a1d91815260200190565b610e9461160e565b6001600160a01b038281166000908152600460209081526040808320858452825291829020825160808101845281548086168252600160a01b900464ffffffffff169281018390526001909101546001600160601b03811693820193909352600160601b90920490921660608201529015801590610f1d5750806020015164ffffffffff164210155b610f555760405162461bcd60e51b81526020600482015260096024820152681b9bdd08195b99195960ba1b60448201526064016105a5565b6001600160a01b038316600090815260046020908152604080832085845290915280822080546001600160c81b03191681556001018290558201516001600160601b03169003611053578051604051632142170760e11b81526001600160a01b038516916342842e0e91610fcf9130918790600401611ce8565b600060405180830381600087803b158015610fe957600080fd5b505af1158015610ffd573d6000803e3d6000fd5b5050604080518581526000602082018190528183015290516001600160a01b03871693507f4d31a5599cdb48031c1f03259adbd513be468c5735012719a1a9850869b558b192509081900360600190a25061113d565b6110708383836000015184604001516001600160601b0316611866565b6060810151604051632142170760e11b81526001600160a01b038516916342842e0e916110a39130918790600401611ce8565b600060405180830381600087803b1580156110bd57600080fd5b505af11580156110d1573d6000803e3d6000fd5b50505050826001600160a01b03167f4d31a5599cdb48031c1f03259adbd513be468c5735012719a1a9850869b558b18383606001518460400151604051610a1d939291909283526001600160a01b039190911660208301526001600160601b0316604082015260600190565b610a306001600055565b61114f61160e565b33600090815260056020526040902054806111985760405162461bcd60e51b8152602060048201526009602482015268302062616c616e636560b81b60448201526064016105a5565b336000818152600560205260408082208290555190919083908381818185875af1925050503d80600081146111e9576040519150601f19603f3d011682016040523d82523d6000602084013e6111ee565b606091505b505090508061122f5760405162461bcd60e51b815260206004820152600d60248201526c115512081cd95b990819985a5b609a1b60448201526064016105a5565b60405182815233907f0f2fb75cc1977a496e94837f859e957f68e26e70dc1b75d9945ee92ae57969ba9060200160405180910390a2505061077d6001600055565b61127861160e565b611280611638565b6001600160a01b0382811660009081526003602090815260408083208584528252918290208251808401909352549283168252600160a01b9092046001600160601b0316918101829052906113045760405162461bcd60e51b815260206004820152600a6024820152691b9bdd081b1a5cdd195960b21b60448201526064016105a5565b80602001516001600160601b031634146113515760405162461bcd60e51b815260206004820152600e60248201526d0e0e4d2c6ca40dad2e6dac2e8c6d60931b60448201526064016105a5565b6001600160a01b03831660009081526003602090815260408083208584529091528120558051611385908490849034611866565b604051632142170760e11b81526001600160a01b038416906342842e0e906113b590309033908790600401611ce8565b600060405180830381600087803b1580156113cf57600080fd5b505af11580156113e3573d6000803e3d6000fd5b50506040805185815234602082015233918101919091526001600160a01b03861692507fa1dad7a242ad5440359512ca7f24d86adda6cb3cce179adb21025eed2442d7e69150606001610a1d565b61143961160e565b6001600160a01b0382811660009081526003602090815260408083208584529091529020541633146114975760405162461bcd60e51b815260206004820152600760248201526610b9b2b63632b960c91b60448201526064016105a5565b6001600160a01b03821660008181526003602090815260408083208584529091528082209190915551632142170760e11b81526342842e0e906114e290309033908690600401611ce8565b600060405180830381600087803b1580156114fc57600080fd5b505af1158015611510573d6000803e3d6000fd5b50505050816001600160a01b03167faca2f4260fb2b4e6aa5f68a07c66e0a461f508267354a97bbefb46e09c9b875d8260405161154f91815260200190565b60405180910390a2610a306001600055565b61156961165c565b604051632142170760e11b81526001600160a01b038416906342842e0e9061159990309085908790600401611ce8565b600060405180830381600087803b1580156115b357600080fd5b505af11580156115c7573d6000803e3d6000fd5b50505050505050565b6115d861165c565b6001600160a01b03811661160257604051631e4fbdf760e01b8152600060048201526024016105a5565b61160b816116e1565b50565b60026000540361163157604051633ee5aeb560e01b815260040160405180910390fd5b6002600055565b60015460ff161561077d5760405163d93c066560e01b815260040160405180910390fd5b6001546001600160a01b0361010090910416331461077d5760405163118cdaa760e01b81523360048201526024016105a5565b611697611a50565b6001805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600180546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b03821661177f5760405162461bcd60e51b815260206004820152600b60248201526a0726563697069656e743d360ac1b60448201526064016105a5565b6103e8816001600160601b031611156117c45760405162461bcd60e51b81526020600482015260076024820152666665653e31302560c81b60448201526064016105a5565b6001600160601b0381166001600160a01b038316600160601b81026bffffffffffffffffffffffff19168217600255604051918252907f1e6478ac12ebdcc5503c6df8708a2472c76959aad3ed4089d4f4bdac6b3d97099060200160405180910390a25050565b611833611638565b6001805460ff1916811790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258336116c4565b6040516301ffc9a760e01b815263152a902d60e11b600482015281906001600160a01b038616906301ffc9a790602401602060405180830381865afa1580156118b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118d79190611d58565b1561199b5760405163152a902d60e11b8152600481018590526024810183905260009081906001600160a01b03881690632a55205a906044016040805180830381865afa15801561192c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119509190611d7a565b90925090508015611998576119658184611da8565b6001600160a01b038316600090815260056020526040812080549295508392909190611992908490611d22565b90915550505b50505b6002546001600160601b031615611a1c57600254600090612710906119c9906001600160601b031685611dbb565b6119d39190611dd2565b90506119df8183611da8565b600254600160601b90046001600160a01b0316600090815260056020526040812080549294508392909190611a15908490611d22565b9091555050505b6001600160a01b03831660009081526005602052604081208054839290611a44908490611d22565b90915550505050505050565b60015460ff1661077d57604051638dfc202b60e01b815260040160405180910390fd5b6001600160a01b038116811461160b57600080fd5b60008060408385031215611a9b57600080fd5b8235611aa681611a73565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215611ae057600080fd5b8435611aeb81611a73565b93506020850135611afb81611a73565b925060408501359150606085013567ffffffffffffffff811115611b1e57600080fd5b8501601f81018713611b2f57600080fd5b803567ffffffffffffffff811115611b4957611b49611ab4565b604051601f8201601f19908116603f0116810167ffffffffffffffff81118282101715611b7857611b78611ab4565b604052818152828201602001891015611b9057600080fd5b8160208401602083013760006020838301015280935050505092959194509250565b80356001600160601b0381168114611bc957600080fd5b919050565b600080600060608486031215611be357600080fd5b8335611bee81611a73565b925060208401359150611c0360408501611bb2565b90509250925092565b600060208284031215611c1e57600080fd5b8135611c2981611a73565b9392505050565b60008060408385031215611c4357600080fd5b8235611c4e81611a73565b9150611c5c60208401611bb2565b90509250929050565b600080600060608486031215611c7a57600080fd5b8335611c8581611a73565b925060208401359150604084013564ffffffffff81168114611ca657600080fd5b809150509250925092565b600080600060608486031215611cc657600080fd5b8335611cd181611a73565b9250602084013591506040840135611ca681611a73565b6001600160a01b039384168152919092166020820152604081019190915260600190565b634e487b7160e01b600052601160045260246000fd5b80820180821115611d3557611d35611d0c565b92915050565b64ffffffffff8181168382160190811115611d3557611d35611d0c565b600060208284031215611d6a57600080fd5b81518015158114611c2957600080fd5b60008060408385031215611d8d57600080fd5b8251611d9881611a73565b6020939093015192949293505050565b81810381811115611d3557611d35611d0c565b8082028115828204841417611d3557611d35611d0c565b600082611def57634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220abccb4ab27a0515e0dde630246857802d36f24dbb237f89e9379403121f2d2fa64736f6c634300081c0033",
  "devdoc": {
    "errors": {
      "EnforcedPause()": [
        {
          "details": "The operation failed because the contract is paused."
        }
      ],
      "ExpectedPause()": [
        {
          "details": "The operation failed because the contract is not paused."
        }
      ],
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ],
      "ReentrancyGuardReentrantCall()": [
        {
          "details": "Unauthorized reentrant call."
        }
      ]
    },
    "events": {
      "Paused(address)": {
        "details": "Emitted when the pause is triggered by `account`."
      },
      "Unpaused(address)": {
        "details": "Emitted when the pause is lifted by `account`."
      }
    },
    "kind": "dev",
    "methods": {
      "onERC721Received(address,address,uint256,bytes)": {
        "details": "See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "NftMarketplace",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "Listados fijos + subastas, royalties EIP‑2981, fee de plataforma y pull‑payments.",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 2156,
        "contract": "contracts/NftMarketPlace.sol:NftMarketplace",
        "label": "_status",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 2046,
        "contract": "contracts/NftMarketPlace.sol:NftMarketplace",
        "label": "_paused",
        "offset": 0,
        "slot": "1",
        "type": "t_bool"
      },
      {
        "astId": 8,
        "contract": "contracts/NftMarketPlace.sol:NftMarketplace",
        "label": "_owner",
        "offset": 1,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 7343,
        "contract": "contracts/NftMarketPlace.sol:NftMarketplace",
        "label": "platformFeeBps",
        "offset": 0,
        "slot": "2",
        "type": "t_uint96"
      },
      {
        "astId": 7345,
        "contract": "contracts/NftMarketPlace.sol:NftMarketplace",
        "label": "feeRecipient",
        "offset": 12,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 7383,
        "contract": "contracts/NftMarketPlace.sol:NftMarketplace",
        "label": "listings",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Listing)7367_storage))"
      },
      {
        "astId": 7390,
        "contract": "contracts/NftMarketPlace.sol:NftMarketplace",
        "label": "auctions",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Auction)7376_storage))"
      },
      {
        "astId": 7394,
        "contract": "contracts/NftMarketPlace.sol:NftMarketplace",
        "label": "proceeds",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_struct(Auction)7376_storage))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => struct NftMarketplace.Auction))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_struct(Auction)7376_storage)"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_struct(Listing)7367_storage))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => struct NftMarketplace.Listing))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_struct(Listing)7367_storage)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_struct(Auction)7376_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct NftMarketplace.Auction)",
        "numberOfBytes": "32",
        "value": "t_struct(Auction)7376_storage"
      },
      "t_mapping(t_uint256,t_struct(Listing)7367_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct NftMarketplace.Listing)",
        "numberOfBytes": "32",
        "value": "t_struct(Listing)7367_storage"
      },
      "t_struct(Auction)7376_storage": {
        "encoding": "inplace",
        "label": "struct NftMarketplace.Auction",
        "members": [
          {
            "astId": 7369,
            "contract": "contracts/NftMarketPlace.sol:NftMarketplace",
            "label": "seller",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 7371,
            "contract": "contracts/NftMarketPlace.sol:NftMarketplace",
            "label": "end",
            "offset": 20,
            "slot": "0",
            "type": "t_uint40"
          },
          {
            "astId": 7373,
            "contract": "contracts/NftMarketPlace.sol:NftMarketplace",
            "label": "bid",
            "offset": 0,
            "slot": "1",
            "type": "t_uint96"
          },
          {
            "astId": 7375,
            "contract": "contracts/NftMarketPlace.sol:NftMarketplace",
            "label": "bidder",
            "offset": 12,
            "slot": "1",
            "type": "t_address"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(Listing)7367_storage": {
        "encoding": "inplace",
        "label": "struct NftMarketplace.Listing",
        "members": [
          {
            "astId": 7364,
            "contract": "contracts/NftMarketPlace.sol:NftMarketplace",
            "label": "seller",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 7366,
            "contract": "contracts/NftMarketPlace.sol:NftMarketplace",
            "label": "price",
            "offset": 20,
            "slot": "0",
            "type": "t_uint96"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint40": {
        "encoding": "inplace",
        "label": "uint40",
        "numberOfBytes": "5"
      },
      "t_uint96": {
        "encoding": "inplace",
        "label": "uint96",
        "numberOfBytes": "12"
      }
    }
  }
}